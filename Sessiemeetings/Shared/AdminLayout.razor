@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> _UserManager
@inject RoleManager<IdentityRole> _RoleManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        @if (@context.User.IsInRole(AdminRole))
        {
            <div class="sidebar">
                <AdminNavMenu />
            </div>
        }
        else
        {
            <div class="sidebar">
                <NavMenu />
            </div>
        }
        <div class="main">
            <div class="top-row px-4 auth">
                <LoginDisplay />
            </div>

            <div class="content px-4">
                @Body
            </div>
        </div>
    </Authorized>

    <NotAuthorized>
        <div class="sidebar">
            <NavMenu />
        </div>
        <div class="main">
            <div class="top-row px-4 auth">
                <LoginDisplay />
            </div>

            <div class="content px-4">
                @Body
            </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string AdminRole = "administrator";
    System.Security.Claims.ClaimsPrincipal CurrentUser;
    protected override async Task OnInitializedAsync()
    {
        // Get the current logged in user
        CurrentUser = (await authenticationStateTask).User;
    }

}