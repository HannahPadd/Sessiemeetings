@page "/FormsBoard"
@inject NavigationManager NavigationManager
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using ClassLibrary.Models
@using ClassLibrary
@using Sessiemeetings.Data
<h1>Forms Bord</h1>


@if (forms == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenGrid PageSize="10" AllowPaging="true" Data="@forms" TItem="EvaluationForm" ColumnWidth="200px">
        <Columns>
            <RadzenGridColumn TItem="EvaluationForm" Property="forms.formName" Title="Naam" />
            <RadzenGridColumn TItem="EvaluationForm" Title="Weergeven" Context="form" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Left" Width="100px">
                <Template Context="forms">
                    <RadzenButton Icon="done" ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" Click="@(args => loadFormPagina(forms.formName))">
                    </RadzenButton>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
}
@code {

    private IEnumerable<string>[] List;
    private List<EvaluationForm> forms;


    protected override void OnInitialized()
    {
        forms = new List<EvaluationForm>();
        DbConnection getFormsList = new DbConnection();
        List = getFormsList.GetFormsList();
        for (int i = 0; i < List[0].Count(); i++)
        {
            List<Field> jsonDe = JsonSerializer.Deserialize<List<Field>>(List[2].ElementAt(i));
            forms.Add(new EvaluationForm(List[0].ElementAt(i), List[1].ElementAt(i), jsonDe));
        }

    }

    public void loadFormPagina(string formName)
    {
        NavigationManager.NavigateTo("/Form/" + formName);
    }

}
