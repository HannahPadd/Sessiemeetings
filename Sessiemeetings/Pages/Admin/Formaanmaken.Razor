@page "/Formaanmaken"
@using Sessiemeetings.Data
@using ClassLibrary.Models
@using ClassLibrary
@using System.Text.Json;
@layout AdminLayout


<EditForm Model="@Form">

    <div class="form-group">
        <label for="name">Naam</label>
        <div>
            <InputText class="form-control" id="name" @bind-Value="@Form.formName" />
        </div>
    </div>
    <div class="form-group">
        <div class="form-group">
            <button type="button" class="btn btn-secondary"
                    @onclick="@(() => Form.fields.Add(new Field()))">
                Voeg veld toe
            </button>
        </div>
        @for (int i = 0; i < Form.fields.Count; i++)
        {
            int index = i;
            var field = Form.fields[i];
            <h5>Veld @(i+1)</h5>

            <div class="row">

                <div class="col">
                    <label>Titel:</label>
                    <input @bind-value="field.title" @bind-value:event="oninput" />
                </div>
                <div class="col">
                    <RadzenDropDown AllowClear="true" TValue="string"
                                    Data="@types" Placeholder="Type"
                                    @bind-Value="field.type" />

                </div>
                <div class="col">
                    <button type="button" class="btn btn-danger"
                            @onclick="@(() => Form.fields.RemoveAt(index))">
                        Verwijderen
                    </button>
                </div>
            </div>

        }
    </div>


    <button class="btn btn-primary" type="submit" @onclick="@Send">Sturen</button>
    <button class="btn btn-secondary" type="button" @onclick="Clear">Clear</button>

</EditForm>

@code {

    EvaluationForm Form = new EvaluationForm { };
    IEnumerable<string> types = new string[] { "Text Box", "Text Area", "Rate", "Date" };
    public IList<EvaluationForm> forms = new List<EvaluationForm>();
    private void Send()
    {
        var jsonFields = JsonSerializer.Serialize(Form.fields);
        Console.WriteLine(jsonFields);
        DbConnection addForm = new DbConnection();
        addForm.InsertForm(Form.formName, jsonFields);
        Clear();
    }





    private void Clear()
    {
        Form = new EvaluationForm();
    }
}