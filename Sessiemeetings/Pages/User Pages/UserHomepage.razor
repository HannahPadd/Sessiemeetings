@page "/"
@using System.Threading;
@implements IDisposable
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;
@using ClassLibrary.Models
@using ClassLibrary
@using ClassLibrary.Services
@inject ClassLibrary.Services.AppData AppData
@inject UserManager<IdentityUser> _UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider


<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="/css/CSS/style.css">
</head>
<body>
    <AuthorizeView>
        <Authorized>
    <h1>Welkom @userName!</h1>
    <div class="card1">
        <RadzenCard Style="width:300px; margin-bottom:20px; margin-right:20px; margin-top:50px; height: 200px">


            <h3>Aanmelden voor een kennissessie</h3>
            <h4>Hier kunt u de huidige sessie's bekijken en u aanmelden voor een sessie.</h4>

            <RadzenLink Path="SessiesBord" Text="Klik hier" Style="color:#547733" />
        </RadzenCard>

    </div>

    @*<div class="card2">
        <RadzenCard Style="width:300px; margin-bottom:20px; margin-right:20px; margin-top:50px; height: 200px">


            <h3>Mijn agenda</h3>
            <h4>Hier kunt u de huidige de sessie zien waarvoor u zich heeft aangemeld.</h4>
            <RadzenLink Path="scheduler" Text="Klik hier" Style="color:#547733;" />
        </RadzenCard>
    </div>*@

    <div class="stick-to-right">
        @*<div class="text-center">
                <h3>@displayDate</h3>
            </div>*@
        <RadzenRadialGauge Style="width: 100%; height: 300px;">
            <RadzenRadialGaugeScale Step="1" Min="0" Max="12" StartAngle="0" EndAngle="360" ShowFirstTick="false"
                                    MinorStep=@minorStep
                                    TickLength="20"
                                    MinorTickLength="10"
                                    TickLabelOffset="40"
                                    TickPosition="GaugeTickPosition.Inside">
                <RadzenRadialGaugeScalePointer Value=@hours Length="0.6" ShowValue="false" />
                <RadzenRadialGaugeScalePointer Value=@seconds Length="0.9" Fill="red" Width="2" ShowValue="false" />
                <RadzenRadialGaugeScalePointer Value=@minutes Length="0.8" ShowValue="false" />
            </RadzenRadialGaugeScale>
        </RadzenRadialGauge>
    </div>

</Authorized>
        <NotAuthorized>
            <h3>U bent niet ingelogd.</h3>
            <RadzenLink Path="/Identity/Account/Login" Text="Klik hier om in te loggen." />

        </NotAuthorized>
        </AuthorizeView>



</body>
</html>



@code {

    public string userName;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private async Task LogUsername()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;
        userName = $"{ user.Identity.Name}";
    }

    Timer timer;
    double hours;
    double minutes;
    double seconds;
    private string displayDate;
    double minorStep = 12 / 60.0;

    protected override void OnInitialized()
    {
        LogUsername();
        timer = new Timer(state =>
        {
            var now = DateTime.Now;
            displayDate = DateTime.Now.ToString();
            hours = now.Hour + now.Minute / 60.0;
            minutes = now.Minute * minorStep + now.Second * 12 / 3600.0;
            seconds = now.Second * minorStep;
            InvokeAsync(StateHasChanged);
        }, null, 0, 1000);

    }
    public void Dispose()
    {
        timer.Dispose();
    }


}
